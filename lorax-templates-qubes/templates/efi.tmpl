<%page args="configdir, KERNELDIR, efiarch, isolabel, kver"/>
<%
from string import lower
EFIBOOTDIR="EFI/BOOT"
APPLE_EFI_ICON=inroot+"/usr/share/pixmaps/bootloader/fedora.icns"
APPLE_EFI_DISKNAME=inroot+"/usr/share/pixmaps/bootloader/fedora-media.vol"
%>

mkdir ${EFIBOOTDIR}
mkdir ${EFIBOOTDIR}/icons
install usr/share/refind/refind/refind_${efiarch|lower}.efi ${EFIBOOTDIR}/BOOT${efiarch}.efi
<%
icons = ["arrow_left", "arrow_right", "func_exit", "func_reset",
         "func_shutdown", "os_unknown", "transparent",
         "vol_external", "vol_internal", "vol_optical"]
%>

%for icon in icons:
    install usr/share/refind/refind/icons/${icon}.png ${EFIBOOTDIR}/icons/
%endfor
install usr/share/anaconda/boot/syslinux-splash.png ${EFIBOOTDIR}/splash.png
### XXX FIXME
install usr/share/plymouth/themes/qubes-dark/qubes-logo-solid.png ${EFIBOOTDIR}/icons/os_qubes.png
install boot/efi/EFI/*/xen*.efi ${EFIBOOTDIR}/xen.efi

# For Secure Boot restore those files (keep in mind 32MB limit on efiboot.img
# imposed by ISO9660, details in #794):
#install boot/efi/EFI/*/shim.efi ${EFIBOOTDIR}/BOOT${efiarch}.efi
## grubx64.efi name is compiled into shim.efi - you need to rebuild it to use
##  different one; or pass it as command line argument (each time)
#install boot/efi/EFI/*/refind_${efiarch|lower}.efi ${EFIBOOTDIR}/grub${efiarch|lower}.efi
#install boot/efi/EFI/*/MokManager.efi ${EFIBOOTDIR}/

## actually make the EFI images
${make_efiboot("images/efiboot.img", include_kernel=True)}

## This is kinda gross, but then... so's EFI.
<%def name="make_efiboot(img, include_kernel=False, disk=False, imgtype='default')">
    <%
    kdir = EFIBOOTDIR if include_kernel else KERNELDIR
    eficonf = "%s/refind.conf" % (EFIBOOTDIR, )
    xenconf = "%s/xen.cfg" % (EFIBOOTDIR, )
    args = "--label=ANACONDA --debug"
    scsi_modules = "3w-9xxx 3w-sas 3w-xxxx BusLogic a100u2w aacraid advansys aic79xx aic7xxx am53c974 arcmsr atp870u bfa bnx2fc csiostor dc395x dmx3191d esas2r esp_scsi fcoe fnic gdth hpsa hptiop hv_storvsc initio ipr ips isci iscsi_boot_sysfs libfc libfcoe libiscsi libosd libsas lpfc megaraid megaraid_mbox megaraid_mm megaraid_sas mpt2sas mpt3sas mvsas mvumi osd pm80xx pmcraid qla1280 qla2xxx qla4xxx raid_class scsi_debug scsi_dh_emc scsi_dh_rdac scsi_transport_fc scsi_transport_iscsi scsi_transport_sas scsi_transport_spi scsi_transport_srp stex sym53c8xx ufshcd virtio_scsi vmw_pvscsi wd719x"
    extra_modules = "affs befs coda cuse dlm gfs2 mptfc ncpfs nilfs2 ocfs2 ocfs2_dlm ocfs2_dlmfs ocfs2_nodemanager ocfs2_stack_o2cb ocfs2_stack_user ocfs2_stackglue sctp sysv ubifs ufs"
    if disk: args += " --disk"
    if imgtype == "apple": args += ' --apple --icon=%s --diskname=%s --product="%s %s"' % (APPLE_EFI_ICON, APPLE_EFI_DISKNAME, product.name, product.version)
    %>
    %if include_kernel:
        copy ${KERNELDIR}/vmlinuz ${EFIBOOTDIR}
        runcmd chroot ${inroot} dracut --nomdadmconf --nolvmconf --xz --install '/.buildstamp' --add 'anaconda pollcdrom' --omit "network multipath modsign systemd crypt shutdown plymouth fcoe fcoe-uefi nfs iscsi ifcfg" --omit-drivers="${scsi_modules}" --omit-drivers="${extra_modules}" /boot/efi/EFI/qubes/initrd-small.img ${kver}
        install boot/efi/EFI/qubes/initrd-small.img ${EFIBOOTDIR}/initrd.img
    %endif
    install ${configdir}/refind.conf ${eficonf}
    install ${configdir}/xen-efi.cfg ${xenconf}
    replace @PRODUCT@ '${product.name}' ${eficonf}
    replace @VERSION@ ${product.version} ${eficonf}
    replace @KERNELNAME@ vmlinuz ${eficonf}
    replace @KERNELPATH@ /${kdir}/vmlinuz ${eficonf}
    replace @KERNELPATH@ /${kdir}/vmlinuz ${xenconf}
    replace @INITRDPATH@ /${kdir}/initrd.img ${eficonf}
    replace @EFIDIR@ /${EFIBOOTDIR} ${eficonf}
    replace @ISOLABEL@ '${isolabel}' ${eficonf}
    %if disk:
        replace @ROOT@ inst.stage2=hd:LABEL=ANACONDA ${eficonf}
        replace @ROOT@ inst.stage2=hd:LABEL=ANACONDA ${xenconf}
    %else:
        replace @ROOT@ 'inst.stage2=hd:LABEL=${isolabel|udev}' ${eficonf}
        replace @ROOT@ 'inst.stage2=hd:LABEL=${isolabel|udev}' ${xenconf}
    %endif
    %if efiarch == 'IA32':
        copy ${eficonf} ${EFIBOOTDIR}/BOOT.conf
    %endif
    runcmd mkefiboot ${args} ${outroot}/${EFIBOOTDIR} ${outroot}/${img}
</%def>
