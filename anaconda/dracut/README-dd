Driver Update Disk Handling

anaconda-dracut takes advantage of dracut's hooks in order to load driver
modules before the rest of the installer is executed.


cmdline hook
    parse-anaconda-dd.sh
    Calls set_neednet if network is needed to retrieve a driver rpm
    The files will be downloaded when the network device online hook is executed.

initqueue/online
    fetch-driver-net.sh
    If URLs are passed to inst.dd they are all downloaded into /tmp/DD-net/

pre-trigger hook
    driver-updates.sh
    Looks for devices labeled OEMDRV and starts the systemd service for the UI
    Also saves the initial state of the module list and uses udev to trigger
    loading of existing modules.

pre-pivot hook
    driver-updates-net.sh
    Check for network downloaded driver rpms and start the systemd service to
    load the drivers.

    anaconda-depmod.sh
    If any drivers were installed or downloaded run depmod on the $NEWROOT

Systemd Services
    driver-updates@.service
    This service launch the driver update UI (/bin/driver-updates). It handles
    connecting the tty so that the user can select drivers if inst.dd has
    been passed on the cmdline.

driver-updates
    This searches disks labeled OEMDRV for driver update repositories and
    optionally lets the user pick individual drivers. It will also search
    unlabeled devices if they are passed on the kernel cmdline with
    inst.dd=/dev/sdb2

    Pass it the path to a directory of rpms (eg. downloaded from the
    network) and it will install them before checking for additional OEMDRV
    labeled devices. It will also do this if /tmp/DD-net/ is present.

    If /tmp/dd_args_ks is present when it runs it will ignore existing
    OEMDRV devices and process the devices in the file first, then process
    any new OEMDRV devices that appear.

    Pass inst.dd with no parameters and it will prompt the user for specific
    drivers to load using a simple text user interface.

parse-kickstart
    If the driverdisk command is present in the kickstart it will write
    out partitions to /tmp/dd_args_ks and network sources to the cmdline
    for normal network handling. The dd_args_ks devices are handled in
    run_kickstart using the driver-updates@.service
